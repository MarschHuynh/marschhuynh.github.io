{"meta":{"title":"Marsch's Blog","subtitle":null,"description":"This is a blog of Marsch","author":"Marsch Huynh","url":"http://skymarsch.com"},"pages":[],"posts":[{"title":"Fix grub when can't boot by reinstall grub","slug":"Fix-grub-when-cant-boot-by-reinstall-grub","date":"2016-06-16T08:51:52.000Z","updated":"2016-08-06T07:14:45.000Z","comments":true,"path":"2016/06/16/Fix-grub-when-cant-boot-by-reinstall-grub/","link":"","permalink":"http://skymarsch.com/2016/06/16/Fix-grub-when-cant-boot-by-reinstall-grub/","excerpt":"","text":"Mount System partition1sudo mount /dev/sdXY /mnt Now bind the directories that grub needs access to to detect other operating systems, like so.1234sudo mount --bind /dev /mnt/dev &amp;&amp;sudo mount --bind /dev/pts /mnt/dev/pts &amp;&amp;sudo mount --bind /proc /mnt/proc &amp;&amp;sudo mount --bind /sys /mnt/sys Change root directory1sudo chroot /mnt Install grub1grub-install /dev/sdX Check grub1grub-install --recheck /dev/sdX Update grub to find another os on your computer1update-grub Unmount123456exit &amp;&amp;sudo umount /mnt/sys &amp;&amp;sudo umount /mnt/proc &amp;&amp;sudo umount /mnt/dev/pts &amp;&amp;sudo umount /mnt/dev &amp;&amp;sudo umount /mnt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://skymarsch.com/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://skymarsch.com/tags/linux/"},{"name":"grub","slug":"grub","permalink":"http://skymarsch.com/tags/grub/"}]},{"title":"Cách tạo DrawerLayout trong android","slug":"Cach-tao-DrawerLayout-trong-android","date":"2016-04-20T05:38:00.000Z","updated":"2016-08-06T07:14:47.000Z","comments":true,"path":"2016/04/20/Cach-tao-DrawerLayout-trong-android/","link":"","permalink":"http://skymarsch.com/2016/04/20/Cach-tao-DrawerLayout-trong-android/","excerpt":"","text":"DrawerLayoutSau đây là các bước tạo DrawerLayout Thêm các giá trị sau vào file res -&gt; values -&gt; string.xml 12345678910111213141516171819&lt;string name=\"action_settings\"&gt;Settings&lt;/string&gt;&lt;string name=\"action_search\"&gt;Search&lt;/string&gt;&lt;string name=\"drawer_open\"&gt;Open&lt;/string&gt;&lt;string name=\"drawer_close\"&gt;Close&lt;/string&gt;&lt;string name=\"nav_item_home\"&gt;Home&lt;/string&gt;&lt;string name=\"nav_item_friends\"&gt;Friends&lt;/string&gt;&lt;string name=\"nav_item_notifications\"&gt;Messages&lt;/string&gt;&lt;!-- navigation drawer item labels --&gt;&lt;string-array name=\"nav_drawer_labels\"&gt; &lt;item&gt;@string/nav_item_home&lt;/item&gt; &lt;item&gt;@string/nav_item_friends&lt;/item&gt; &lt;item&gt;@string/nav_item_notifications&lt;/item&gt;&lt;/string-array&gt;&lt;string name=\"title_messages\"&gt;Messages&lt;/string&gt;&lt;string name=\"title_friends\"&gt;Friends&lt;/string&gt;&lt;string name=\"title_home\"&gt;Home&lt;/string&gt; Thêm các giá trị sau vào file res -&gt; values -&gt; color.xml 123456&lt;color name=\"colorPrimary\"&gt;#F50057&lt;/color&gt;&lt;color name=\"colorPrimaryDark\"&gt;#C51162&lt;/color&gt;&lt;color name=\"textColorPrimary\"&gt;#FFFFFF&lt;/color&gt;&lt;color name=\"windowBackground\"&gt;#FFFFFF&lt;/color&gt;&lt;color name=\"navigationBarColor\"&gt;#000000&lt;/color&gt;&lt;color name=\"colorAccent\"&gt;#FF80AB&lt;/color&gt; Thêm các giá trị sau vào file res -&gt; values -&gt; dimens.xml nếu trùng thì bỏ qua nhé. 123&lt;dimen name=\"activity_horizontal_margin\"&gt;16dp&lt;/dimen&gt;&lt;dimen name=\"activity_vertical_margin\"&gt;16dp&lt;/dimen&gt;&lt;dimen name=\"nav_drawer_width\"&gt;260dp&lt;/dimen&gt; Thêm style sau vào style.xml. 12345678&lt;style name=\"MyMaterialTheme\" parent=\"MyMaterialTheme.Base\"&gt;&lt;/style&gt;&lt;style name=\"MyMaterialTheme.Base\" parent=\"Theme.AppCompat.Light.DarkActionBar\"&gt; &lt;item name=\"windowNoTitle\"&gt;true&lt;/item&gt; &lt;item name=\"windowActionBar\"&gt;false&lt;/item&gt; &lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt; &lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt; &lt;item name=\"colorAccent\"&gt;@color/colorAccent&lt;/item&gt;&lt;/style&gt; Mở Manifest.xml và thay đổi theme thành MyMaterialTheme nhé 1android:theme=\"@style/MyMaterialTheme\" Thêm toolbar (ActionBar) Tạo file res -&gt; toolbar.xml(layout) 1234567891011&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;android.support.v7.widget.Toolbar xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:local=\"http://schemas.android.com/apk/res-auto\" android:id=\"@+id/toolbar\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:minHeight=\"?attr/actionBarSize\" android:background=\"?attr/colorPrimary\" local:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\" local:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\" /&gt; Tạo menu item cho toolbar Tạo file menu_main.xml trong res -&gt; menu 123456789101112131415161718&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" tools:context=\".MainActivity\"&gt; &lt;item android:id=\"@+id/action_search\" android:title=\"@string/action_search\" android:orderInCategory=\"100\" android:icon=\"@drawable/ic_action_search\" app:showAsAction=\"ifRoom\" /&gt; &lt;item android:id=\"@+id/action_settings\" android:title=\"@string/action_settings\" android:orderInCategory=\"100\" app:showAsAction=\"never\" /&gt;&lt;/menu&gt; Đổi file MainActivity.java có nội dung nhu sau. 1234567891011121314151617181920212223242526272829303132333435363738394041import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuItem;public class MainActivity extends AppCompatActivity &#123; private Toolbar mToolbar; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mToolbar = (Toolbar) findViewById(R.id.toolbar); setSupportActionBar(mToolbar); getSupportActionBar().setDisplayShowHomeEnabled(true); &#125; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.menu_main, menu); return true; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item.getItemId(); //noinspection SimplifiableIfStatement if (id == R.id.action_settings) &#123; return true; &#125; return super.onOptionsItemSelected(item); &#125;&#125; Tạo class NavDrawerItem.java 1234567891011121314151617181920212223242526272829public class NavDrawerItem &#123; private boolean showNotify; private String title; public NavDrawerItem() &#123; &#125; public NavDrawerItem(boolean showNotify, String title) &#123; this.showNotify = showNotify; this.title = title; &#125; public boolean isShowNotify() &#123; return showNotify; &#125; public void setShowNotify(boolean showNotify) &#123; this.showNotify = showNotify; &#125; public String getTitle() &#123; return title; &#125; public void setTitle(String title) &#123; this.title = title; &#125;&#125; Tạo layout nav_drawer_row 123456789101112131415&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:clickable=\"true\"&gt; &lt;TextView android:id=\"@+id/title\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:paddingLeft=\"30dp\" android:paddingTop=\"10dp\" android:paddingBottom=\"10dp\" android:textSize=\"15dp\" android:textStyle=\"bold\" /&gt;&lt;/RelativeLayout&gt; Tạo một layout khác có tên fragment_navigation_drawer 123456789101112131415161718192021222324&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:background=\"@android:color/white\"&gt; &lt;RelativeLayout android:id=\"@+id/nav_header_container\" android:layout_width=\"match_parent\" android:layout_height=\"140dp\" android:layout_alignParentTop=\"true\" android:background=\"@color/colorPrimary\"&gt; &lt;ImageView android:layout_width=\"70dp\" android:layout_height=\"70dp\" android:src=\"@drawable/ic_profile\" android:scaleType=\"fitCenter\" android:layout_centerInParent=\"true\" /&gt; &lt;/RelativeLayout&gt; &lt;android.support.v7.widget.RecyclerView android:id=\"@+id/drawerList\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:layout_below=\"@id/nav_header_container\" android:layout_marginTop=\"15dp\" /&gt;&lt;/RelativeLayout&gt; Chúng ta dùng RecyclerView để hiển thị các item trên drawer layout nhé, vì vậy tạo NavigationDrawerAdapter.java có nội dung như sau 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import android.content.Context;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import java.util.Collections;import java.util.List;public class NavigationDrawerAdapter extends RecyclerView.Adapter&lt;NavigationDrawerAdapter.MyViewHolder&gt; &#123; List&lt;NavDrawerItem&gt; data = Collections.emptyList(); private LayoutInflater inflater; private Context context; public NavigationDrawerAdapter(Context context, List&lt;NavDrawerItem&gt; data) &#123; this.context = context; inflater = LayoutInflater.from(context); this.data = data; &#125; public void delete(int position) &#123; data.remove(position); notifyItemRemoved(position); &#125; @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123; View view = inflater.inflate(R.layout.nav_drawer_row, parent, false); MyViewHolder holder = new MyViewHolder(view); return holder; &#125; @Override public void onBindViewHolder(MyViewHolder holder, int position) &#123; NavDrawerItem current = data.get(position); holder.title.setText(current.getTitle()); &#125; @Override public int getItemCount() &#123; return data.size(); &#125; class MyViewHolder extends RecyclerView.ViewHolder &#123; TextView title; public MyViewHolder(View itemView) &#123; super(itemView); title = (TextView) itemView.findViewById(R.id.title); &#125; &#125;&#125; Tạo FragmentDrawer.java đây chính là DraweLayout 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163import android.content.Context;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarDrawerToggle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.view.GestureDetector;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import java.util.ArrayList;import java.util.List;public class FragmentDrawer extends Fragment &#123; private static String TAG = FragmentDrawer.class.getSimpleName(); private RecyclerView recyclerView; private ActionBarDrawerToggle mDrawerToggle; private DrawerLayout mDrawerLayout; private NavigationDrawerAdapter adapter; private View containerView; private static String[] titles = null; private FragmentDrawerListener drawerListener; public FragmentDrawer() &#123; &#125; public void setDrawerListener(FragmentDrawerListener listener) &#123; this.drawerListener = listener; &#125; public static List&lt;NavDrawerItem&gt; getData() &#123; List&lt;NavDrawerItem&gt; data = new ArrayList&lt;&gt;(); // preparing navigation drawer items for (int i = 0; i &lt; titles.length; i++) &#123; NavDrawerItem navItem = new NavDrawerItem(); navItem.setTitle(titles[i]); data.add(navItem); &#125; return data; &#125; @Override public void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); // drawer labels titles = getActivity().getResources().getStringArray(R.array.nav_drawer_labels); &#125; @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) &#123; // Inflating view layout View layout = inflater.inflate(R.layout.fragment_navigation_drawer, container, false); recyclerView = (RecyclerView) layout.findViewById(R.id.drawerList); adapter = new NavigationDrawerAdapter(getActivity(), getData()); recyclerView.setAdapter(adapter); recyclerView.setLayoutManager(new LinearLayoutManager(getActivity())); recyclerView.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), recyclerView, new ClickListener() &#123; @Override public void onClick(View view, int position) &#123; drawerListener.onDrawerItemSelected(view, position); mDrawerLayout.closeDrawer(containerView); &#125; @Override public void onLongClick(View view, int position) &#123; &#125; &#125;)); return layout; &#125; public void setUp(int fragmentId, DrawerLayout drawerLayout, final Toolbar toolbar) &#123; containerView = getActivity().findViewById(fragmentId); mDrawerLayout = drawerLayout; mDrawerToggle = new ActionBarDrawerToggle(getActivity(), drawerLayout, toolbar, R.string.drawer_open, R.string.drawer_close) &#123; @Override public void onDrawerOpened(View drawerView) &#123; super.onDrawerOpened(drawerView); getActivity().invalidateOptionsMenu(); &#125; @Override public void onDrawerClosed(View drawerView) &#123; super.onDrawerClosed(drawerView); getActivity().invalidateOptionsMenu(); &#125; @Override public void onDrawerSlide(View drawerView, float slideOffset) &#123; super.onDrawerSlide(drawerView, slideOffset); toolbar.setAlpha(1 - slideOffset / 2); &#125; &#125;; mDrawerLayout.setDrawerListener(mDrawerToggle); mDrawerLayout.post(new Runnable() &#123; @Override public void run() &#123; mDrawerToggle.syncState(); &#125; &#125;); &#125; public static interface ClickListener &#123; public void onClick(View view, int position); public void onLongClick(View view, int position); &#125; static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener &#123; private GestureDetector gestureDetector; private ClickListener clickListener; public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final ClickListener clickListener) &#123; this.clickListener = clickListener; gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() &#123; @Override public boolean onSingleTapUp(MotionEvent e) &#123; return true; &#125; @Override public void onLongPress(MotionEvent e) &#123; View child = recyclerView.findChildViewUnder(e.getX(), e.getY()); if (child != null &amp;&amp; clickListener != null) &#123; clickListener.onLongClick(child, recyclerView.getChildPosition(child)); &#125; &#125; &#125;); &#125; @Override public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) &#123; View child = rv.findChildViewUnder(e.getX(), e.getY()); if (child != null &amp;&amp; clickListener != null &amp;&amp; gestureDetector.onTouchEvent(e)) &#123; clickListener.onClick(child, rv.getChildPosition(child)); &#125; return false; &#125; @Override public void onTouchEvent(RecyclerView rv, MotionEvent e) &#123; &#125; @Override public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) &#123; &#125; &#125; public interface FragmentDrawerListener &#123; public void onDrawerItemSelected(View view, int position); &#125;&#125; Bây giờ thay đổi layout của MainActivity 1234567891011121314151617181920212223242526272829303132333435&lt;android.support.v4.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:id=\"@+id/drawer_layout\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"&gt; &lt;LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\"&gt; &lt;LinearLayout android:id=\"@+id/container_toolbar\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:orientation=\"vertical\"&gt; &lt;include android:id=\"@+id/toolbar\" layout=\"@layout/toolbar\" /&gt; &lt;/LinearLayout&gt; &lt;FrameLayout android:id=\"@+id/container_body\" android:layout_width=\"fill_parent\" android:layout_height=\"0dp\" android:layout_weight=\"1\" /&gt; &lt;/LinearLayout&gt; &lt;fragment android:id=\"@+id/fragment_navigation_drawer\" android:name=\"info.androidhive.materialdesign.activity.FragmentDrawer\" android:layout_width=\"@dimen/nav_drawer_width\" android:layout_height=\"match_parent\" android:layout_gravity=\"start\" app:layout=\"@layout/fragment_navigation_drawer\" tools:layout=\"@layout/fragment_navigation_drawer\" /&gt;&lt;/android.support.v4.widget.DrawerLayout&gt; Thay đổi MainActivity.java để thêm DraweLayout 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import android.support.v4.widget.DrawerLayout;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuItem;import android.view.View;public class MainActivity extends AppCompatActivity implements FragmentDrawer.FragmentDrawerListener &#123; private Toolbar mToolbar; private FragmentDrawer drawerFragment; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mToolbar = (Toolbar) findViewById(R.id.toolbar); setSupportActionBar(mToolbar); getSupportActionBar().setDisplayShowHomeEnabled(true); drawerFragment = (FragmentDrawer) getSupportFragmentManager().findFragmentById(R.id.fragment_navigation_drawer); drawerFragment.setUp(R.id.fragment_navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), mToolbar); drawerFragment.setDrawerListener(this); &#125; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.menu_main, menu); return true; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item.getItemId(); //noinspection SimplifiableIfStatement if (id == R.id.action_settings) &#123; return true; &#125; return super.onOptionsItemSelected(item); &#125; @Override public void onDrawerItemSelected(View view, int position) &#123; &#125;&#125; Bây giờ run là bạn đã có thể thấy kết quả rồi nhé, bước tiếp theo mình sẽ hướng dẫn các bạn thêm fragment và chuyển qua fragment khác khi kích vào DrawerLayout item Bây giờ chúng ta tạo một fragment có tên là HomeFragment.java 12345678910111213141516171819202122232425262728293031323334353637383940import android.app.Activity;import android.os.Bundle;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;public class HomeFragment extends Fragment &#123; public HomeFragment() &#123; // Required empty public constructor &#125; @Override public void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); &#125; @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) &#123; View rootView = inflater.inflate(R.layout.fragment_home, container, false); // Inflate the layout for this fragment return rootView; &#125; @Override public void onAttach(Activity activity) &#123; super.onAttach(activity); &#125; @Override public void onDetach() &#123; super.onDetach(); &#125;&#125; Thay đổi MainActivity.java có nội dung như sau 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarActivity;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.Toast;public class MainActivity extends ActionBarActivity implements FragmentDrawer.FragmentDrawerListener &#123; private static String TAG = MainActivity.class.getSimpleName(); private Toolbar mToolbar; private FragmentDrawer drawerFragment; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mToolbar = (Toolbar) findViewById(R.id.toolbar); setSupportActionBar(mToolbar); getSupportActionBar().setDisplayShowHomeEnabled(true); drawerFragment = (FragmentDrawer) getSupportFragmentManager().findFragmentById(R.id.fragment_navigation_drawer); drawerFragment.setUp(R.id.fragment_navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), mToolbar); drawerFragment.setDrawerListener(this); // display the first navigation drawer view on app launch displayView(0); &#125; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.menu_main, menu); return true; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item.getItemId(); //noinspection SimplifiableIfStatement if (id == R.id.action_settings) &#123; return true; &#125; if(id == R.id.action_search)&#123; Toast.makeText(getApplicationContext(), \"Search action is selected!\", Toast.LENGTH_SHORT).show(); return true; &#125; return super.onOptionsItemSelected(item); &#125; @Override public void onDrawerItemSelected(View view, int position) &#123; displayView(position); &#125; private void displayView(int position) &#123; Fragment fragment = null; String title = getString(R.string.app_name); switch (position) &#123; case 0: fragment = new HomeFragment(); title = getString(R.string.title_home); break; case 1: fragment = new FriendsFragment(); title = getString(R.string.title_friends); break; case 2: fragment = new MessagesFragment(); title = getString(R.string.title_messages); break; default: break; &#125; if (fragment != null) &#123; FragmentManager fragmentManager = getSupportFragmentManager(); FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.replace(R.id.container_body, fragment); fragmentTransaction.commit(); // set the toolbar title getSupportActionBar().setTitle(title); &#125; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://skymarsch.com/categories/Android/"}],"tags":[{"name":"layout","slug":"layout","permalink":"http://skymarsch.com/tags/layout/"},{"name":"android","slug":"android","permalink":"http://skymarsch.com/tags/android/"}]},{"title":"Khái quát về Git và cách sử dụng cơ bản","slug":"Cach-su-dung-git","date":"2016-04-17T10:34:17.000Z","updated":"2016-08-06T07:14:49.000Z","comments":true,"path":"2016/04/17/Cach-su-dung-git/","link":"","permalink":"http://skymarsch.com/2016/04/17/Cach-su-dung-git/","excerpt":"","text":"Git là gì ? Về nguồn gốc GIT là một hệ thống quản lý phiên bản phân tán, vốn được phát triển nhằm quản lý mã nguồn của Linux. Đối với lập trình viên thì GIT giống như một cổ máy thời gian vậy, có khi còn thần thánh hơn nữa á chứ. Vậy tại sao phải dùng Git Hãy tưởng tượng rằng khi chúng ta làm việc nhóm, cùng viết một chương trình gì đó. Team gồm có 5 ngườimỗi người code một module rồi dùng usb copy lại sao :v, khá là vất vả. Đó là chưa kể đến việc nhiều người cũng chỉnh sửa 1 file rồi sau này tìm kiếm chỗ khác nhau mà ghép lại thì mờ mắt lun :)) Dùng hay không thì không ai bắt ép chúng ta cả, nói thật bây giờ bảo mình code một cái gì đó mà không được dùng Git thì chẵn khác nào bảo mình có người yêu mà không được gặp vậy :v ( mình vẫn còn FA). Mình đưa ra vài ví dụ vậy thôi, đợi khi nào GIT trả mình tiền PR rồi mình viết thêm :3 Cách dùng Git cơ bảnCác từ khóa cơ bản trong Git Repository: Nó là nơi chưa tất cả các thông tin của một project do git quản lý. Nói chung nó là một cái khó chưa code của mình :D. Viết tắt là repo. Có hai loại repo là: Local: Là cái kho chưa trong máy của mình. Remote: Là cái kho ở trên server chuyên dụng cho Git có thể kể đến như github.com, gitlab.com. Local là nơi mà mình sẽ làm việc ở trên máy, còn khi nào mình muốn chia sẽ công việc (code) của mình cho người khác thì mình “push” lên server. Hoặc ngược lại mình muốn lấy code của người khác thì mình “pull” từ server về. Branch: Nhánh theo mình hiểu thì nó giống như một workspace hay giống như một ngữ cảnh. Vậy vai trò của nhánh là gì. Trong git có một nhánh chính có tên là “master”. Khi bạn muốn thử nghiệm một chức năng mới trên sản phẩm của mình bạn có thể tạo ra một nhánh khác ví dụ như “NewStyle” sau đó làm việc trên nhánh này mà không hề ảnh hướng đến nhánh master hay công việc của các thành viên khác trong nhóm. Sau khi thử nghiệm thành công bạn có thể merge lại vào nhánh master nếu muốn. Như trên hình thì chúng ta có 4 branch là: master ( màu xanh lá) Add new feature Fix bug in video display Add a slide bar Merge: Đây là một công việc khi bạn hoàn thành một chức năng hay một thử nghiệm và muốn đưa nó vào sản phẩm của mình, hay bạn muốn đưa code của mình gộp lại cùng với các thành viên khác trong team. Conflict: Xung đột thường xảy ra khi chúng ta tiến hành merge mà lúc đó có 1 file bị thay đổi bởi 2 nhánh khác nhau. Ví dụ: Nhánh A sửa file abc.txt và nhánh B cũng sủa file abc.txt, trong một số trường hợp đơn giản git có thể tiến hành auto merge chong chúng ta nhưng trong một số trường hợp phức tạp hơn thì git sẽ báo là conflict để chúng ta tự merge 2 nhánh lại với nhau. Commit: Đây là một hành động mà chúng ta thao tác nhiều nhất khi dùng git. Hành động này lưu lại các trạng thái của các file đang được theo dõi. Nói nôm na nó như là chúng ta lưu lại game sau khi chơi qua phần vậy. Các thao tác cơ bản khi dùng git Init một local repo 1git init Thêm các file để git theo dõi 1git add . Cú pháp trên thêm tất cả các file tại node thử mục hiện tại (đây là cú pháp thường dùng), nếu như bạn muốn thêm một file nào đó ví dụ như file abc.txt thì làm như sau. 1git add abc.txt Commit 1git commit -m \"Some thing you want to commit\" Nếu như bạn không dùng tham số -m thì thì sau khi bạn gõ lên git commit sẽ hiện ra một console giống như vim để bạn nhập vào message Lưu ý trước khi commit thì các bạn phải git add . trước nhé Xem lại log 1git log git log có các tham số thường dùng như --oneline hay --graph 1git log --oneline 1git log --graph Các bạn nên test để biết cụ thể 2 lệnh trên làm gì nhé ;) Checkout Lệnh git checkout có 2 chức năng chính là chuyển về trạng thái của một commit hoặc là chuyển sang một nhánh khác Để chuyển về trạng thái của một commit trước đó ta làm như sau: Xem mã băm của commit mà bạn muốn quay về 1git log --oneline Kết quả sẽ có dạng như sau 12b031e33 Add xyz.txt772932c Add abc.txt Bây giờ bạn muốn quay lại commit nào thì thực hiện lệnh như sau, ở đây mình muốn quay lại commit “Add abc.txt” 1git checkout 772932c Để kiểm tra các bạn xem lại log là thấy liền nhé :D. Cuộc đời mà đươc quản lý bằng git thì tốt biết mấy :v À nếu các bạn muốn quay lại commit mới nhất thì cứ checkout lại branch khi nãy nhé, ở đây là master. Để tạo ra một brand mới 1git checkout -b \"NewBranch\" Merge 2 nhánh lại với nhau Giả sử bạn muôn merge nhánh NewStyle vào nhánh master thì trước hết bạn phải ở nhánh master đã nhé 1git merge NewStyle Vậy chúng ta sẽ làm gì khi bị conflict: Sau khi thực hiện lệnh merge xong bạn sử dụng lệnh get status để xem merge thành công hay bị conflict, nếu bị conflict thì sẽ có dạng như sau: Các file màu xanh là những file merge thành công, còn màu đỏ là file bị conflict. Mở file bị conflict ra các bạn sẽ thấy như sau: Đoạn conflict được chia ra làm 2 phần bởi dấu =======, phần trên là của local repo (hay chính là đoạn code mà chúng ta đã thay đổi) và phần trên là của remote repo (hay là của người khác) Để fix bạn tiến hành xóa 1 trong 2 phần là xong ;) Fix xong thì bạn dùng lệnh git add . để thêm file vừa fix xong rồi commit lại nhé git commit -m &quot;Fix conflict&quot; Tiếp theo mình sẽ hướng dẫn việc sử dụng pull and push để lấy code về và đưa code lên remote repo Pull là hành động lấy code từ trên remote repo về local repo Để pull về code của nhánh master 1git pull Để pull về code của một branch cụ thể ta dùng lệnh sau 1git pull origin NewStyle Lưu ý: origin là tên của remote repo còn NewStyle là tên của branch trên remote repo Sau khi pull code về có thể xảy ra conflict, các bạn cứ fix như bình thường sau đó commit lại là ok. Push là hành động đưa code từ local repo lên remote repo Các bạn lưu ý là trước khi push code lên phải pull code về trước. 1git push origin master 1git push origin NewStyle Trên là khái quát và cách dùng cơ bản của git, mình xin phép kết thúc bài tại đây nhé ;)","categories":[{"name":"Technical skill","slug":"Technical-skill","permalink":"http://skymarsch.com/categories/Technical-skill/"}],"tags":[{"name":"git","slug":"git","permalink":"http://skymarsch.com/tags/git/"},{"name":"team work","slug":"team-work","permalink":"http://skymarsch.com/tags/team-work/"}]}]}